@page "/servers"
@attribute [StreamRendering]

@rendermode InteractiveServer

@* @inject NavigationManager NavigationManager *@
<h3>Server page</h3>
<br />

<div class="container-fluid p-0">
    <div class="row g-0">
        <div class="col">
            <button 
                class="btn btn-secondary w-100 rounded-0 text-center px-0" 
                @onclick=@(() => FilterByCity(""))>
                All
            </button>
        </div>
    </div>
    <div class="row g-0 my-2">
        @foreach (var city in cities)
        {
        <div class="col text-center @(selectedCity.Equals(city, StringComparison.OrdinalIgnoreCase) ? "bg-secondary" : "")">
            <img src=@($"images/{city}.png") alt="" class="card-img-top" style="max-width: 6rem;" />
            <div class="card-body">
                <button
                    class="btn btn-dark rounded-0 text-center" 
                    @onclick=@(() => FilterByCity(@city))>
                @city
                </button>
            </div>
        </div>
        }
    </div>
</div>

<div class="input-group w-50 my-4">
    <input type="text" class="form-control" placeholder="Search by name..." id="" 
        @bind-value="serverFilter" 
        @bind-value:event="oninput"
        @bind-value:after="() => SearchServer()" 
        />
    @* <button class="btn btn-outline-secondary" id="btn-search">Search</button> *@
</div>

<ServerListComponent @rendermode="InteractiveServer" SelectedCity="@selectedCity"/>

@* <ServerComponent @rendermode="InteractiveServer"/>
<ServerComponent/> *@

<a href="/servers/add" class="text-white btn btn-info">Add Server</a>

@code {
    private List<string> cities = CitiesRepository.Cities;

    private string selectedCity = string.Empty;
    private string serverFilter = string.Empty;

    private void FilterByCity(string city) 
    {
        selectedCity = city;
    }


    private void SearchServer()
    {
        // servers = ServersRepository.FindByName(serverFilter);
        selectedCity = string.Empty;
    }
}
